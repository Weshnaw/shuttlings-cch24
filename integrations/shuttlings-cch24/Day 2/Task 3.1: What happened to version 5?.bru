meta {
  name: Task 3.1: What happened to version 5?
  type: http
  seq: 3
}

get {
  url: {{host}}{{day}}/v6/dest?from=fe80::1&key=5:6:7::3333
  body: none
  auth: none
}

params:query {
  from: fe80::1
  key: 5:6:7::3333
}

tests {
  test("should receive 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should receive key", function() {
    const data = res.getBody();
    expect(data).to.equal('fe85:6:7::3332');
  });
}

docs {
  To keep up with the times, Santa also wants to use this type of routing for IPv6 packets. He became a bit bored with elementary school math and decided that for IPv6 packets, the algorithm should use XOR instead of overflowing addition.
  
  Implement /2/v6/dest and /2/v6/key in the same way as in Task 1 and 2, but using IPv6 addresses.
}
